#!/bin/bash

EXE="${0##*/}"

# scheme generated by pywal
GENERATED_SCHEME="${HOME}/.cache/wal/colors.sh"
# function which explicitly updates the color schemes of the following
# 	dunst
update_schemes() {
	# read the scheme that pywal generated
	if [ ! -f "${GENERATED_SCHEME}" ]; then
		return
	fi
	source "${GENERATED_SCHEME}"
	dunstrc="${CFG_BASE}/config/dunst/dunstrc"
	dunstrc_tmpl="${CFG_BASE}/config/dunst/dunstrc.tmpl"
	# generate a sed command to populate the template
	substitution=""
	for i in `seq 0 15`; do
		# first of all, resolve the color from the sourced file
		cmd='echo $color'
		col=`eval "${cmd}${i}"`
		substitution+="${substitution}; s/|color${i}|/${col}/"
	done

	# make a backup copy of the existing config (only one maintained for now)
	[ -f "${dunstrc}" ] && cp "${dunstrc}" "${dunstrc}.bak"
	# run the actual substitution; clobber ${dunstrc}
	sed "${substitution}" ${CFG_BASE}/config/dunst/dunstrc.tmpl \
		> "${dunstrc}"
	# restart dunst so the new scheme is in effect
	# Q: what happens when a notification is posted, when dunst is being
	#    restarted!
	dunst-reinit
}

setbg() {
  bg="${1}"
  wal -n -i "${bg}"                 # generate color schemes
  feh --bg-fill "${bg}"             # update the background
  pidof dwm && xdotool key Super+F5 # inform dwm (if needed)
  update_schemes
}

case "${1}" in
  *rand)
    # chose a random background image
    bg=`ls ${CFG_BASE}/backgrounds/* | shuf -n1`
    setbg "${bg}"
    ;;
  *choose)
    # open up sxiv and the key-bindings there will do the rest
    sxiv -t "${CFG_BASE}/backgrounds"
    ;;
  *set)
    bg="${2}"
    if [ ! -f "${bg}" ]; then
      echo "error: background '${bg}' not found"
      exit 1
    fi
    setbg "${bg}"
    ;;
  *)
    echo "${EXE} changes the background"
    echo "usage: ${EXE} [ rand | choose | set [bg] ]"
    exit
    ;;
esac
